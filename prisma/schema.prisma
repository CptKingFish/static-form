// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(sequence())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                String             @id @default(cuid())
    name              String?
    email             String?            @unique
    emailVerified     DateTime?
    image             String?
    accounts          Account[]
    sessions          Session[]
    posts             Post[]
    forms             Form[]
    formItemResponses FormItemResponse[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Form {
    id        String   @id @default(cuid())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User       @relation(fields: [createdById], references: [id])
    createdById String
    items       FormItem[]

    @@index([name])
}

model FormItem {
    id        String       @id @default(cuid())
    text      String
    type      FormItemType
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt

    form      Form               @relation(fields: [formId], references: [id])
    formId    String
    options   FormItemOption[]
    responses FormItemResponse[]
}

model FormItemOption {
    id        String   @id @default(cuid())
    text      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    formItem   FormItem           @relation(fields: [formItemId], references: [id])
    formItemId String
    responses  FormItemResponse[]
}

model FormItemResponse {
    id        String   @id @default(cuid())
    response  String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    formItem   FormItem         @relation(fields: [formItemId], references: [id])
    formItemId String
    user       User             @relation(fields: [userId], references: [id])
    userId     String
    options    FormItemOption[]
}

enum FormItemType {
    TEXT
    EMAIL
    CHECKBOX
    RADIO
    DROPDOWN
    FILE
    DATE
    TIME
}
