import { type GetServerSidePropsContext } from "next";
import Head from "next/head";
import { getSession } from "next-auth/react";

import { api } from "@/utils/api";
import { db } from "@/server/db";
import Form from "@/components/form/Form";

interface FormPageProps {
  formId: string | undefined;
}

export default function FormPage({ formId }: FormPageProps) {
  const { data: formData } = api.form.getFormData.useQuery(
    {
      formId: formId ?? "",
    },
    {
      enabled: !!formId,
    },
  );

  return (
    <>
      <Head>
        <title>Form</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-slate-200">
        {formData ? <Form formData={formData} /> : null}
      </main>
    </>
  );
}

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  const formId = ctx.params?.formId;
  const session = await getSession(ctx);

  if (typeof formId !== "string" || !formId || !session) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  const form = await db.form.findUnique({
    where: {
      id: formId,
    },
    select: {
      createdBy: true,
    },
  });

  if (form?.createdBy.id !== session.user?.id) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  return {
    props: {
      formId,
    },
  };
};
